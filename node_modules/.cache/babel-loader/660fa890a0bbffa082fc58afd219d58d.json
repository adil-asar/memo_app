{"ast":null,"code":"var _jsxFileName = \"D:\\\\React-Pro\\\\memo\\\\src\\\\Main\\\\Main.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport List from './List';\nimport './main.css';\nimport Data from '../Data';\nimport NewNote from './NewNote';\nimport { nanoid } from \"nanoid\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Main = _ref => {\n  _s();\n\n  let {\n    mode\n  } = _ref;\n  const [data, setData] = useState(Data);\n\n  const addnewdata = val => {\n    const date = new Date();\n    const obj = {\n      id: nanoid(),\n      title: val.title,\n      memo: val.memo,\n      date: date.toLocaleDateString('en-us', {\n        weekday: \"long\",\n        year: \"numeric\",\n        month: \"short\",\n        day: \"numeric\"\n      })\n    };\n    const newval = [...data, obj];\n    localStorage.setItem('memo_app', JSON.stringify(newval));\n    setData(newval);\n  }; //  Fetch Memo \n\n\n  useEffect(() => {\n    const fetch = JSON.parse(localStorage.getItem('memo_app'));\n    setData(fetch);\n  }, []); // Delete Memo\n\n  const Delete = id => {\n    let del = JSON.parse(localStorage.getItem('memo_app'));\n    del = del.filter(memo => memo.id !== id);\n    localStorage.setItem('memo_app', JSON.stringify(del));\n    setData(del);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `main_css ${mode ? 'dark_css' : ''}`,\n    children: [/*#__PURE__*/_jsxDEV(NewNote, {\n      addnewdata: addnewdata\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(List, {\n      array_data: data,\n      setData: setData,\n      delete_memo: Delete\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Main, \"RlH9G9O1dwaTTxB9GjoYy14dKFI=\");\n\n_c = Main;\nexport default Main;\n\nvar _c;\n\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"sources":["D:/React-Pro/memo/src/Main/Main.jsx"],"names":["React","useState","useEffect","List","Data","NewNote","nanoid","Main","mode","data","setData","addnewdata","val","date","Date","obj","id","title","memo","toLocaleDateString","weekday","year","month","day","newval","localStorage","setItem","JSON","stringify","fetch","parse","getItem","Delete","del","filter"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAO,YAAP;AACA,OAAOC,IAAP,MAAiB,SAAjB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAASC,MAAT,QAAuB,QAAvB;;;AAGA,MAAMC,IAAI,GAAG,QAAc;AAAA;;AAAA,MAAb;AAAEC,IAAAA;AAAF,GAAa;AAEzB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,CAACG,IAAD,CAAhC;;AAIA,QAAMO,UAAU,GAAIC,GAAD,IAAS;AAC1B,UAAMC,IAAI,GAAG,IAAIC,IAAJ,EAAb;AACA,UAAMC,GAAG,GACT;AACEC,MAAAA,EAAE,EAAEV,MAAM,EADZ;AAEEW,MAAAA,KAAK,EAAEL,GAAG,CAACK,KAFb;AAGEC,MAAAA,IAAI,EAAEN,GAAG,CAACM,IAHZ;AAIEL,MAAAA,IAAI,EAAEA,IAAI,CAACM,kBAAL,CAAwB,OAAxB,EAAiC;AAAEC,QAAAA,OAAO,EAAE,MAAX;AAAmBC,QAAAA,IAAI,EAAE,SAAzB;AAAoCC,QAAAA,KAAK,EAAE,OAA3C;AAAoDC,QAAAA,GAAG,EAAE;AAAzD,OAAjC;AAJR,KADA;AAOA,UAAMC,MAAM,GAAG,CAAC,GAAGf,IAAJ,EAAUM,GAAV,CAAf;AACAU,IAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiCC,IAAI,CAACC,SAAL,CAAeJ,MAAf,CAAjC;AACAd,IAAAA,OAAO,CAACc,MAAD,CAAP;AACD,GAZD,CANyB,CAoBzB;;;AAEAtB,EAAAA,SAAS,CAAC,MAAM;AACd,UAAM2B,KAAK,GAAGF,IAAI,CAACG,KAAL,CAAWL,YAAY,CAACM,OAAb,CAAqB,UAArB,CAAX,CAAd;AACArB,IAAAA,OAAO,CAACmB,KAAD,CAAP;AACD,GAHQ,EAGN,EAHM,CAAT,CAtByB,CA2BzB;;AAEA,QAAMG,MAAM,GAAIhB,EAAD,IAAQ;AACrB,QAAIiB,GAAG,GAAGN,IAAI,CAACG,KAAL,CAAWL,YAAY,CAACM,OAAb,CAAqB,UAArB,CAAX,CAAV;AACAE,IAAAA,GAAG,GAAGA,GAAG,CAACC,MAAJ,CAAYhB,IAAD,IAAUA,IAAI,CAACF,EAAL,KAAYA,EAAjC,CAAN;AACAS,IAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiCC,IAAI,CAACC,SAAL,CAAeK,GAAf,CAAjC;AACAvB,IAAAA,OAAO,CAACuB,GAAD,CAAP;AACD,GALD;;AASA,sBACE;AAAK,IAAA,SAAS,EAAG,YAAWzB,IAAI,GAAG,UAAH,GAAgB,EAAG,EAAnD;AAAA,4BACE,QAAC,OAAD;AAAS,MAAA,UAAU,EAAEG;AAArB;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,IAAD;AAAM,MAAA,UAAU,EAAEF,IAAlB;AAAwB,MAAA,OAAO,EAAEC,OAAjC;AAA0C,MAAA,WAAW,EAAEsB;AAAvD;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD,CA5CD;;GAAMzB,I;;KAAAA,I;AA8CN,eAAeA,IAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport List from './List'\r\nimport './main.css'\r\nimport Data from '../Data'\r\nimport NewNote from './NewNote'\r\nimport { nanoid } from \"nanoid\"\r\n\r\n\r\nconst Main = ({ mode }) => {\r\n\r\n  const [data, setData] = useState(Data)\r\n\r\n\r\n\r\n  const addnewdata = (val) => {\r\n    const date = new Date()\r\n    const obj =\r\n    {\r\n      id: nanoid(),\r\n      title: val.title,\r\n      memo: val.memo,\r\n      date: date.toLocaleDateString('en-us', { weekday: \"long\", year: \"numeric\", month: \"short\", day: \"numeric\" })\r\n    }\r\n    const newval = [...data, obj]\r\n    localStorage.setItem('memo_app', JSON.stringify(newval))\r\n    setData(newval)\r\n  }\r\n\r\n  //  Fetch Memo \r\n\r\n  useEffect(() => {\r\n    const fetch = JSON.parse(localStorage.getItem('memo_app'))\r\n    setData(fetch)\r\n  }, [])\r\n\r\n  // Delete Memo\r\n\r\n  const Delete = (id) => {\r\n    let del = JSON.parse(localStorage.getItem('memo_app'))\r\n    del = del.filter((memo) => memo.id !== id)\r\n    localStorage.setItem('memo_app', JSON.stringify(del))\r\n    setData(del)\r\n  }\r\n\r\n\r\n\r\n  return (\r\n    <div className={`main_css ${mode ? 'dark_css' : ''}`}>\r\n      <NewNote addnewdata={addnewdata} />\r\n      <List array_data={data} setData={setData} delete_memo={Delete} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Main"]},"metadata":{},"sourceType":"module"}